2013.01.07m
Ran into an unexpected problem with the allocation of the arrays. When we make the variable for holding the datatype for inputdata and output data for the IfW_Calculate routine, we might have to reallocate at each timestep. This is because the number of points we need information for might change (likely won't, but this could introduce a bug later if we do).

Anyhow, now I need to figure out how to allocate the receiving array also.

REVISION:
After talking with Bonnie, we will not do reallocation of arrays within the IfW_CalcOutput routine. Instead, we will just do error checking there to make sure they are allocated the same size. The rest will be handled by the glue code.



New plan:
   -- Interface layer --> modify IfW_Module to handle the revisions to HHWind
   -- do the other modules
   -- Make the Driver work with paraprint
   -- merge all the wind file types together (if possible)
   -- write documentation on use


Things to add sometime:
   -  Add information in the Parameters about how many time steps there are, bounds on time
   -  Add information in the Parameters about the bounds on the dimensions, steps and stepsize


Things to remember to change:
   -- UnWind -> UnitWind --> get this during init (stored in OtherStates)


-=-=-=-
-=-=-=-

Architectural question:
   Should we use a single common set of types in all sub-modules, or does each module keep its own types?



Module:
   TODO:
      -  figure out what types should be common to all the module pieces.
         -  Copy over what is needed from the HHWind one.
         -  Make the HHWind use the global types rather than its own.
         -  figure out how to make that work with userwind.
      -  Figure out a good way to copy things from one type to another
      -  Get CALL HHWind_Init working correctly (passing stuff out)
      -  Get CALL HHWind_End working correctly
      -  Get CALL HHWind_CalcOutput working correctly
      -  Get the FFWind calls to work correctly

   Completed:
      +  Put the InflowWind_Module_Types.f90 contents into something else (standard registry type perhaps?)

Driver:
   TODO:
      -  Make sure that HHWind works correctly
      -  Make sure that FFWind works correctly



Documentation:
   TODO:
      -  explain input
      -  explain outputs
      -  explain structure of the code
      -  Explain what has been hacked out (linearize, hacks, etc)
      -  Explain how to use UserWnd
      -  Explain name changes???
      -  planned features
         -  storing info about the "grid size/stepsize/time length" of the file read in




-=-=-=-=-=-=-=-=- MOSTLY COMPLETED / COMPLETED -=-=-=-=-=-=-=-=-

IfW_FFWind.f90
   TODO:
      -  Convert the READ statements to the new library ones.
      -  Revisit End routine to make sure that we actually close out all the variables that we need to (reset things)

   COMPLETED:
      +  convert Init routines
      +  convert End routine
      +  make CalcOutput routine
      +  Change all WrScr calls to ErrMsg concatenations
      +  remove the global variables
      +  FFWind test routine


IfW_HHWind.f90
   TODO:
      -  Add in tests of the empty state routines

   COMPLETED:
      +  properly allocate array for the output
      +  step through all points
      +  Err handling in CalcOutput
      +  Err handling in the GetWindSpeed function (upgrade to use ErrID levels etc)
      +  Err handling in Init
      +  Err handling in End
      +  Add the other modular framework required routines into the file.
      +  HHWind test routine
      +  Setup regression test with HHWind
   
