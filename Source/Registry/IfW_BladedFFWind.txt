###################################################################################################################################
# Registry for IfW_BladedFFWind, creates MODULE IfW_BladedFFWind_Types
# Module IfW_BladedFFWind_Types contains all of the user-defined types needed in IfW_BladedFFWind. It also contains copy, destroy, pack, and
# unpack routines associated with each defined data types.
###################################################################################################################################
# File last committed: $Date$
# (File) Revision #: $Rev$
# URL: $HeadURL$
###################################################################################################################################
# Entries are of the form
# keyword <IfW_BladedFFWind[/ModuleAbvr]> <TypeName>   <FieldType>    <FieldName>  <Dims>  <Ctrl> <DNAME> <DESCRIP> <UNITS>
###################################################################################################################################

include Registry_NWTC_Library.txt


#########################

typedef  IfW_BladedFFWind/IfW_BladedFFWind   InitInputType   CHARACTER(1024)  WindFileName      -     -     -     "Name of the wind file to use"                                 -
typedef  ^                       ^                       Logical  TowerFileExist    -     -     -     "Tower file exists"                                            -


# Init Output
#typedef  ^                       InitOutputType  CHARACTER(10)    WriteOutputHdr    :     -     -     "Names of output-to-file channels"                             -
#typedef  ^                       ^               CHARACTER(10)    WriteOutputUnt    :     -     -     "Units of output-to-file channels"                             -
typedef  ^                       InitOutputType       ProgDesc    Ver               -     -     -     "Version information off FFWind submodule"                     -


# Define any data that are not considered actual states here:
#   e.g. data used only for efficiency purposes (indices for searching in an array, copies of previous calculations of output
#   at a given time, etc.)
typedef  ^                       OtherStateType          IntKi    TimeIndex         -     0     -     "An Index into the TData array"                                -
typedef  ^                       ^                       Logical  Initialized       -  .FALSE.  -     "Flag to indicate if the module was initialized"               -
typedef  ^                       ^                       IntKi    UnitWind          -     -     -     "Unit number for the wind file opened"                         -

# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef  ^                    ParameterType       CHARACTER(1024) WindFileName      -     -     -     "Name of the wind file to use"                                 -
typedef  ^                       ^                       Logical  Periodic          -  .FALSE.  -     "Flag to indicate if the wind file is periodic"                -
typedef  ^                       ^                       Logical  Linearize         -  .FALSE.  -     "If this is true, we are linearizing"                          -
typedef  ^                       ^                       Logical  TowerDataExist    -  .FALSE.  -     "If true, we specified a tower file"                           -
typedef  ^                       ^                       DbKi     DT                -     -     -     "Time step for cont. state integration & disc. state update"   seconds

typedef  ^                       ^                       ReKi     FFData            ::::  -     -     "Array of FF data"                                             -
typedef  ^                       ^                       ReKi     FFTower           :::   -     -     "Array of data along tower, below FF array"                    -
typedef  ^                       ^                       ReKi     FFDTime           -     0     -     "Delta time"                                                   seconds
typedef  ^                       ^                       ReKi     FFRate            -     0     -     "Data rate (1/FFTime)"                                         Hertz
typedef  ^                       ^                       ReKi     FFYHWid           -     0     -     "Half the grid width"                                          meters
typedef  ^                       ^                       ReKi     FFZHWid           -     0     -     "Half the grid height"                                         meters
typedef  ^                       ^                       ReKi     RefHt             -     0     -     "Reference (hub) height of the grid"                           meters
typedef  ^                       ^                       ReKi     GridBase          -     0     -     "the height of the bottom of the grid"                         meters
typedef  ^                       ^                       ReKi     InitXPosition     -     0     -     "the initial x position of grid (distance in FF is offset)"    meters
typedef  ^                       ^                       ReKi     InvFFYD           -     0     -     "reciprocal of delta y"                                        1/meters
typedef  ^                       ^                       ReKi     InvFFZD           -     0     -     "reciprocal of delta z"                                        1/meters
typedef  ^                       ^                       ReKi     InvMFFWS          -     0     -     "reciprocal of mean wind speed (MeanFFWS)"                     seconds/meter
typedef  ^                       ^                       ReKi     MeanFFWS          -     0     -     "Mean wind speed (as defined in FF file), not necessarily of the portion used"  meters/second
typedef  ^                       ^                       ReKi     TotalTime         -     0     -     "The total time of the simulation"                             seconds
typedef  ^                       ^                       IntKi    NFFComp           -     3     -     "Number of wind components"                                    -
typedef  ^                       ^                       IntKi    NFFSteps          -     0     -     "Number of time steps in the FF array"                         -
typedef  ^                       ^                       IntKi    NYGrids           -     0     -     "Number of points in the lateral (y) direction of the grids"   -
typedef  ^                       ^                       IntKi    NZGrids           -     0     -     "Number of points in the vertical (z) direction of the grids"  -
typedef  ^                       ^                       IntKi    NTGrids           -     0     -     "Number of points in the vertical (z) direction on the tower (below the grids)"  -
typedef  ^                       ^                       IntKi    WindFileFormat    -     -     -     "Binary file format description number"                        -


# ..... Inputs ....................................................................................................................
# Define inputs that are not on this mesh here:
typedef  ^                    InputType                  ReKi     Position          ::    -     -     "Array holding the input positions at a given timestep"        meters


# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
typedef  ^                    OutputType                 ReKi     Velocity          ::    -     -     "Array holding the U,V,W velocity for a given timestep"        meters/sec
typedef  ^                       ^                       ReKi     DiskVel           {3}   -     -     "Vector holding the U,V,W average velocity of the disk"        meters/sec
